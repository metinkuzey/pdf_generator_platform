version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: pdf-postgres
    environment:
      POSTGRES_DB: pdf_generator
      POSTGRES_USER: pdf_user
      POSTGRES_PASSWORD: pdf_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./docker/postgres/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - pdf-network

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: pdf-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - pdf-network

  # RabbitMQ Message Queue
  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: pdf-rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: pdf_user
      RABBITMQ_DEFAULT_PASS: pdf_password
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    networks:
      - pdf-network

  # MinIO Object Storage
  minio:
    image: minio/minio:latest
    container_name: pdf-minio
    environment:
      MINIO_ROOT_USER: pdf_user
      MINIO_ROOT_PASSWORD: pdf_password
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio_data:/data
    command: server /data --console-address ":9001"
    networks:
      - pdf-network

  # MinIO Client for bucket creation
  minio-client:
    image: minio/mc:latest
    container_name: pdf-minio-client
    depends_on:
      - minio
    entrypoint: >
      /bin/sh -c "
      sleep 5;
      /usr/bin/mc alias set minio http://minio:9000 pdf_user pdf_password;
      /usr/bin/mc mb minio/pdf-templates --ignore-existing;
      /usr/bin/mc mb minio/pdf-outputs --ignore-existing;
      /usr/bin/mc policy set public minio/pdf-templates;
      /usr/bin/mc policy set public minio/pdf-outputs;
      exit 0;
      "
    networks:
      - pdf-network

volumes:
  postgres_data:
  redis_data:
  rabbitmq_data:
  minio_data:

networks:
  pdf-network:
    driver: bridge